<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Specifying base package of the Components like Controller, Service, 
		DAO -->
	<context:component-scan base-package="com.dataguise.saas.*" />
	<mvc:annotation-driven />

	<!-- Getting Database properties -->
	<context:property-placeholder
		location="classpath:db_${spring.profiles.active}.properties" />
	<!-- Getting Configuration properties -->
	<!-- <context:property-placeholder location="classpath:config.properties" 
		/> -->

	<!-- Transaction -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="applicationContextProvder" class="com.dataguise.saas.util.ApplicationContextProvider" />
	<bean id="dgSaasUserDAO" class="com.dataguise.saas.dao.DgSaasUserDAOImpl"></bean>
	<bean id="dgSaasDataPlatformsDAO" class="com.dataguise.saas.dao.DgSaasDataPlatformsDAOImpl"></bean>
	<bean id="dgSaasDataSolutionsDAO" class="com.dataguise.saas.dao.DgSaasDataSolutionsDAOImpl"></bean>
	
	<bean id="dgUserService" class="com.dataguise.saas.service.DgUserServiceImpl"></bean>
	<bean id="dgSaasProductsService" class="com.dataguise.saas.service.DgSaasProductsServiceImpl"></bean>
	
	<bean id="emailContentGenerator" class="com.dataguise.saas.notifier.DgEmailContentGenerator">
		<constructor-arg value="classpath:/mail.html" />
	</bean>

	<beans profile="prod">
		<!-- DataSource -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
			destroy-method="close">
			<property name="driverClass" value="${database.driverClass}" />
			<property name="jdbcUrl" value="${database.url}" />
			<property name="user" value="${database.username}" />
			<property name="password" value="${database.password}" />
			<property name="acquireIncrement" value="${connection.acquireIncrement}" />
			<property name="minPoolSize" value="${connection.minPoolSize}" />
			<property name="maxPoolSize" value="${connection.maxPoolSize}" />
			<property name="maxIdleTime" value="${connection.maxIdleTime}" />
		</bean>

		<!-- Hibernate SessionFactory -->
		<bean id="sessionFactory"
			class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource"></property>
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.dialect">${hibernate.dialect}</prop>
					<!-- <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> -->
					<prop key="hibernate.default_schema">${hibernate.default_schema}</prop>
					<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
					<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
					<prop key="hibernate.connection.shutdown">true</prop>

				</props>
			</property>
			<property name="packagesToScan" value="com.dataguise.saas.model"></property>
		</bean>
	</beans>

	<beans profile="test">
		<!-- DataSource -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
			destroy-method="close">
			<property name="driverClass" value="${database.driverClass}" />
			<property name="jdbcUrl" value="${database.url}" />
			<property name="user" value="${database.username}" />
			<!-- <property name="password" value="${database.password}" /> -->
			<property name="acquireIncrement" value="${connection.acquireIncrement}" />
			<property name="minPoolSize" value="${connection.minPoolSize}" />
			<property name="maxPoolSize" value="${connection.maxPoolSize}" />
			<property name="maxIdleTime" value="${connection.maxIdleTime}" />
		</bean>
		<!-- Hibernate SessionFactory -->
		<bean id="sessionFactory"
			class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource"></property>
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.dialect">${hibernate.dialect}</prop>
					<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
					<prop key="hibernate.hbm2ddl.import_files">scripts/test/initial_test_data.sql</prop>
					<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
					<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
					<prop key="hibernate.connection.shutdown">true</prop>

				</props>
			</property>
			<property name="packagesToScan" value="com.dataguise.saas.model"></property>
		</bean>
	</beans>


</beans>